package io.mixeway.domain.service.vulnerability;

import io.mixeway.db.entity.Vulnerability;
import io.mixeway.db.repository.VulnerabilityRepository;
import org.springframework.stereotype.Service;

import java.util.Optional;

/**
 * @author gsiewruk
 */
@Service
public class CreateOrGetVulnerabilityService {
    private final VulnerabilityRepository vulnerabilityRepository;

    public CreateOrGetVulnerabilityService(VulnerabilityRepository vulnerabilityRepository){
        this.vulnerabilityRepository = vulnerabilityRepository;
    }

    public Vulnerability createOrGetVulnerability(String name){
        Optional<Vulnerability> vulnerability = vulnerabilityRepository.findByName(name);
        return vulnerability.orElseGet(() -> new Vulnerability(name));
    }

    public Vulnerability createOrGetVulnerabilityWithDescAndReferences(String name, String description, String references, String recommendation) {
        Optional<Vulnerability> vulnerability = vulnerabilityRepository.findByName(name);
        if (vulnerability.isPresent())
            return vulnerability.get();
        else {
            return new Vulnerability(name, description, references,recommendation);
        }
    }
}
