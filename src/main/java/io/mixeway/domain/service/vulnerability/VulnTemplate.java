package io.mixeway.domain.service.vulnerability;

import io.mixeway.config.Constants;
import io.mixeway.db.entity.Status;
import io.mixeway.db.entity.VulnerabilitySource;
import io.mixeway.db.repository.ProjectVulnerabilityRepository;
import io.mixeway.db.repository.StatusRepository;
import io.mixeway.db.repository.VulnerabilitySourceRepository;
import org.springframework.stereotype.Service;

/**
 * @author gsiewruk
 */
@Service
public class VulnTemplate {
    public final CreateOrGetVulnerabilityService createOrGetVulnerabilityService;
    public final ProjectVulnerabilityRepository projectVulnerabilityRepository;
    public final VulnerabilitySourceRepository vulnerabilitySourceRepository;
    public final StatusRepository statusRepository;
    public final Status STATUS_NEW;
    public final Status STATUS_EXISTING;
    public final VulnerabilitySource SOURCE_NETWORK;
    public final VulnerabilitySource SOURCE_SOURCECODE;
    public final VulnerabilitySource SOURCE_WEBAPP;
    public final VulnerabilitySource SOURCE_OPENSOURCE;

    public VulnTemplate(CreateOrGetVulnerabilityService createOrGetVulnerabilityService, ProjectVulnerabilityRepository projectVulnerabilityRepository,
                        VulnerabilitySourceRepository vulnerabilitySourceRepository, StatusRepository statusRepository){
        this.statusRepository = statusRepository;
        this.vulnerabilitySourceRepository = vulnerabilitySourceRepository;
        this.createOrGetVulnerabilityService = createOrGetVulnerabilityService;
        this.projectVulnerabilityRepository = projectVulnerabilityRepository;

        STATUS_EXISTING = statusRepository.findByName(Constants.STATUS_EXISTING);
        STATUS_NEW = statusRepository.findByName(Constants.STATUS_NEW);
        SOURCE_NETWORK = vulnerabilitySourceRepository.findByName(Constants.VULN_TYPE_NETWORK);
        SOURCE_SOURCECODE = vulnerabilitySourceRepository.findByName(Constants.VULN_TYPE_SOURCECODE);
        SOURCE_WEBAPP = vulnerabilitySourceRepository.findByName(Constants.VULN_TYPE_WEBAPP);
        SOURCE_OPENSOURCE = vulnerabilitySourceRepository.findByName(Constants.VULN_TYPE_OPENSOURCE);
    }
}
