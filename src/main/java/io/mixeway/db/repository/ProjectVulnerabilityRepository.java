package io.mixeway.db.repository;

import io.mixeway.db.entity.*;
import io.mixeway.pojo.VulnBarChartProjection;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import java.util.List;
import java.util.Optional;
import java.util.stream.Stream;

/**
 * @author gsiewruk
 */
public interface ProjectVulnerabilityRepository extends JpaRepository<ProjectVulnerability, Long> {
    // Source Code Vulnerabilities
    @Query(value = "select v from ProjectVulnerability v where v.codeProject = :codeProject")
    List<ProjectVulnerability> getVulnerabilitiesByCodeProject(@Param("codeProject") CodeProject codeProject);
    List<ProjectVulnerability> findByCodeProjectAndAnalysisNot(CodeProject codeProject, String analysis);
    List<ProjectVulnerability> findByCodeProjectInAndAnalysisNot(List<CodeProject> codeProjects, String analysis);
    List<ProjectVulnerability> findByCodeProject(CodeProject codeProject);
    List<ProjectVulnerability> findByCodeProjectIn(List<CodeProject> codeProject);
    void deleteByCodeProject(CodeProject codeProject);
    void deleteByCodeProjectIn(List<CodeProject> codeProjects);
    List<ProjectVulnerability> findByCodeProjectAndSeverityAndAnalysis(CodeProject codeProject, String severity, String analysis);
    Stream<ProjectVulnerability> findByProjectAndVulnerabilitySourceAndAnalysisNot(Project project, VulnerabilitySource source, String analyis);
    @Query(value="select count(pv.*) as value, v.name as namee from projectvulnerability pv, vulnerability v, vulnerabilitysource source where v.id=pv.vulnerability_id " +
            "and pv.severity in ('Critical','High') and analysis != 'Not an Issue' and source.id=pv.vulnerabilitysource_id and source.name='SourceCode' group by v.id order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10CodeVulns();
    @Query(value="select count(pv.*) as value, cp.name || '( '|| p.name||')' as namee from projectvulnerability pv, " +
            "codeproject cp, project p where p.id=pv.project_id and cp.id=pv.codeproject_id group by cp.id, p.name order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10CodeProjects();
    //OpenSource
    Optional<ProjectVulnerability> findByVulnerabilityAndVulnerabilitySource(Vulnerability vulnerability, VulnerabilitySource vulnerabilitySource);


    //Infrastructure
    List<ProjectVulnerability> findByProjectAndVulnerabilitySourceAndSeverityNotIn(Project project, VulnerabilitySource vulnerabilitySource, List<String> severities);
    List<ProjectVulnerability> findByAnInterface(Interface anInterface);
    void deleteByAnInterface(Interface anInterface);
    @Query(value="select distinct v.port from ProjectVulnerability v where v.anInterface = :interface and v.vulnerabilitySource.name='Service Detection'")
    List<String> getPortsFromInfraVulnForInterface(@Param("interface") Interface anInterface);
    @Query(value="select count(pv.*) as value, v.name as namee from projectvulnerability pv, vulnerability v, vulnerabilitysource vs where " +
            "vs.id=pv.vulnerabilitysource_id and pv.vulnerability_id=v.id and vs.name='Network' and pv.severity in ('Critic','Critical','High') group " +
            "by v.name order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10InfraVulns();
    @Query(value="select count(*) as value, i.privateip||' ('||p.name||')' as namee from project p, projectvulnerability iv, interface i, asset a,vulnerabilitysource so where p.id=iv.project_Id and so.id=iv.vulnerabilitysource_id " +
            "and so.name='Network' and iv.interface_id=i.id and i.asset_id=a.id and iv.severity in ('Critical','High') group by namee order by value desc limit 10",nativeQuery = true)
    List<VulnBarChartProjection> top10Interfaces();


    //OpenSource
    @Query(value="select distinct(v.*) from projectvulnerability v, codeproject_softwarepacket csp, vulnerabilitysource s where v.softwarepacket_id = csp.softwarepacket_id " +
            "and csp.codeproject_id = ?1 and s.id=v.vulnerabilitysource_id and s.name='OpenSource'", nativeQuery = true)
    List<ProjectVulnerability> getSoftwareVulnsForCodeProject(@Param("id") Long id);
    Optional<ProjectVulnerability> findBySoftwarePacketAndVulnerability(SoftwarePacket softwarePacket, Vulnerability vulnerability);
    @Query(value = "select count(spv) as value, sp.name as namee from softwarepacket sp inner join projectvulnerability spv on " +
            "spv.softwarepacket_id=sp.id inner join vulnerabilitysource vs on vs.id=spv.vulnerabilitysource_id where vs.name='OpenSource' and " +
            "spv.severity in ('Critic', 'Critical', 'High') group by sp.name order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10OpenSource();
    @Query(value="select count(spv) as value, cp.name||' ('||p.name||')' as namee from codeproject cp inner join codeproject_softwarepacket cs on " +
            "cp.id = cs.codeproject_id inner join projectvulnerability spv on cs.softwarepacket_id = spv.softwarepacket_id inner join project p on " +
            "p.id=spv.project_id inner join vulnerabilitysource vs on vs.id=spv.vulnerabilitysource_id where vs.name='OpenSource' and spv.severity in " +
            "('Critic', 'Critical', 'High') group by cp.name, p.name order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10OpenSourceCodeProjects();


    //WebApp
    @Query(value = "select count(*) as value, w.url ||' ('||p.name||')' as namee from project p, projectvulnerability wv, webapp w, " +
            "vulnerabilitysource vs where vs.id=wv.vulnerabilitysource_id and vs.name='WebApplication' and p.id=wv.project_id and w.id=wv.webapp_id " +
            "and wv.severity in ('High','Critical')  group by w.url,p.name order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10WebApps();
    @Query(value = "select count(pv.*) as value, v.name as namee from projectvulnerability pv, vulnerability v, vulnerabilitysource vs where " +
            "vs.id=pv.vulnerabilitysource_id and pv.vulnerability_id=v.id and vs.name='WebApplication' and pv.severity in ('Critic','Critical','High') " +
            "group by v.name order by value desc limit 10", nativeQuery = true)
    List<VulnBarChartProjection> top10WebAppVulns();
}
