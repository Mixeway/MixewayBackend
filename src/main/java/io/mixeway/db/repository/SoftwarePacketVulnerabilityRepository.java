package io.mixeway.db.repository;

import java.util.List;
import java.util.Optional;
import java.util.Set;

import io.mixeway.db.entity.Software;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import io.mixeway.db.entity.SoftwarePacket;
import io.mixeway.db.entity.SoftwarePacketVulnerability;

public interface SoftwarePacketVulnerabilityRepository extends JpaRepository<SoftwarePacketVulnerability, Long> {

	Long deleteBySoftwarepacket(SoftwarePacket softwarepacket);
	List<SoftwarePacketVulnerability> findBySoftwarepacketIn(Set<SoftwarePacket> packets);
	Optional<SoftwarePacketVulnerability> findByName(String name);
	Optional<SoftwarePacketVulnerability> findBySoftwarepacketAndName(SoftwarePacket softwarePacket, String name);
	@Modifying
	@Query(value="delete from softwarepacketvulnerability spv where spv.softwarepacket_id=:id", nativeQuery = true)
	public void deleteVulnsForPacket(@Param("id")Long id);
	@Query(value="select spv.* from softwarepacketvulnerability spv, codeproject_softwarepacket csp where spv.softwarepacket_id = csp.softwarepacket_id " +
			"and csp.codeproject_id in (select id from codeproject where codegroup_id in (select id from codegroup where project_id = ?1))", nativeQuery = true)
	List<SoftwarePacketVulnerability> getSoftwareVulnsForProject(@Param("id") Long id);
	@Query(value="select spv.* from softwarepacketvulnerability spv, codeproject_softwarepacket csp where spv.softwarepacket_id = csp.softwarepacket_id " +
			"and csp.codeproject_id in (select id from codeproject where codegroup_id in (select id from codegroup where project_id = ?1)) and spv.severity = ?2", nativeQuery = true)
	List<SoftwarePacketVulnerability> getSoftwareVulnsForProjectAndSeverity(@Param("id") Long id, @Param("severity") String severity);
	@Query(value="select spv.* from softwarepacketvulnerability spv, codeproject_softwarepacket csp where spv.softwarepacket_id = csp.softwarepacket_id " +
			"and csp.codeproject_id = ?1", nativeQuery = true)
	List<SoftwarePacketVulnerability> getSoftwareVulnsForCodeProject(@Param("id") Long id);
}
